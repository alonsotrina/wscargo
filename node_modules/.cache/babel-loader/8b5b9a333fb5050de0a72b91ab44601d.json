{"ast":null,"code":"var _jsxFileName = \"/Users/alonsotrina/Desktop/repositorio/wscargo/src/components/layout/SubMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubMenu = ({\n  item\n}) => {\n  _s();\n\n  const [subnav, setSubnav] = useState(false);\n\n  const showSubnav = () => setSubnav(!subnav);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-blue\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: item.path,\n        onClick: item.subNav && showSubnav,\n        activeClassName: \"activeo\",\n        children: [item.title, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: // --> condicion para mostar icon dropwon <-- //\n          item.SubMenu && SubMenu ? item.iconClose : item.subNav ? item.iconOpen : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), subnav && item.subNav.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: item.path,\n        children: item.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubMenu, \"g8hLp77WQ+uaQWkY1LswmpimdZ8=\");\n\n_c = SubMenu;\nexport default SubMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubMenu\");","map":{"version":3,"sources":["/Users/alonsotrina/Desktop/repositorio/wscargo/src/components/layout/SubMenu.jsx"],"names":["React","useState","NavLink","Link","SubMenu","item","subnav","setSubnav","showSubnav","path","subNav","title","iconClose","iconOpen","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAE1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMO,UAAU,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAlC;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,EAAE,EAAED,IAAI,CAACI,IAAlB;AACQ,QAAA,OAAO,EAAEJ,IAAI,CAACK,MAAL,IAAeF,UADhC;AAEQ,QAAA,eAAe,EAAC,SAFxB;AAAA,mBAISH,IAAI,CAACM,KAJd,eAKI;AAAA,oBAEQ;AACAN,UAAAA,IAAI,CAACD,OAAL,IAAgBA,OAAhB,GACMC,IAAI,CAACO,SADX,GAEMP,IAAI,CAACK,MAAL,GACAL,IAAI,CAACQ,QADL,GAEA;AAPd;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAoBQP,MAAM,IAAID,IAAI,CAACK,MAAL,CAAYI,GAAZ,CAAgB,CAACT,IAAD,EAAOU,KAAP,kBACtB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEV,IAAI,CAACI,IAAf;AAAA,kBACKJ,IAAI,CAACM;AADV,SAA0BI,KAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADM,CApBlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CArCD;;GAAMX,O;;KAAAA,O;AAuCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nconst SubMenu = ({ item }) => {\n\n    const [subnav, setSubnav] = useState(false)\n\n    const showSubnav = () => setSubnav(!subnav)\n\n    return (\n        <div className=\"text-blue\">\n            <li>\n                <NavLink to={item.path}\n                        onClick={item.subNav && showSubnav}\n                        activeClassName=\"activeo\"\n                        >\n                        {item.title}\n                    <div>\n                        {\n                            // --> condicion para mostar icon dropwon <-- //\n                            item.SubMenu && SubMenu\n                                ? item.iconClose\n                                : item.subNav\n                                ? item.iconOpen\n                                : null\n                        }\n                    </div>\n                </NavLink>\n            </li>\n            {\n                subnav && item.subNav.map((item, index) => (\n                    <li>\n                        <Link to={item.path} key={index}>\n                            {item.title}\n                        </Link>\n                    </li>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default SubMenu\n"]},"metadata":{},"sourceType":"module"}